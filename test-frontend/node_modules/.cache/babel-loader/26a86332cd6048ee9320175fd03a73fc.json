{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/Usuario/Documents/teste-frontend/test-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _regeneratorRuntime from \"C:/Users/Usuario/Documents/teste-frontend/test-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Usuario/Documents/teste-frontend/test-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/Usuario/Documents/teste-frontend/test-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Usuario/Documents/teste-frontend/test-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/Usuario/Documents/teste-frontend/test-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/Usuario/Documents/teste-frontend/test-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\teste-frontend\\\\test-frontend\\\\src\\\\Components\\\\Starred\\\\Starred.js\";\nimport React from \"react\";\nimport Navbar from \"../Navbar/Navbar\";\nimport ServiceUser from \"../../Services/API\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Starred = /*#__PURE__*/function (_React$Component) {\n  _inherits(Starred, _React$Component);\n\n  var _super = _createSuper(Starred);\n\n  function Starred() {\n    var _this;\n\n    _classCallCheck(this, Starred);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      mensagemErro: \"Nenhum usuário para ser exibido.\",\n      nomeUsuario: _this.props.history.location.pathname.split(\"/\")[2],\n      userStarred: []\n    };\n\n    _this.getStarredList = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(username) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.t0 = _this;\n                _context.next = 3;\n                return ServiceUser.getUserStarred(username);\n\n              case 3:\n                _context.t1 = _context.sent;\n\n                _context.t0.setState.call(_context.t0, _context.t1);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(Starred, [{\n    key: \"renderStarredList\",\n    value: function renderStarredList() {\n      if (this.state.userStarred) {\n        if (this.state.userStarred.length === 0) {\n          this.getStarredList(this.state.nomeUsuario);\n        }\n\n        var listaStarred = [];\n\n        var _iterator = _createForOfIteratorHelper(this.state.userStarred),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var star = _step.value;\n            listaStarred.push( /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-header\",\n                children: star.full_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"card-body\",\n                children: star.description || \"Repositório sem descrição.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 11\n            }, this));\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        return listaStarred;\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-light\",\n          role: \"alert\",\n          children: this.state.mensagemErro\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          location: this.props.history.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container mt-3\",\n          children: this.renderStarredList()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return Starred;\n}(React.Component);\n\nexport { Starred as default };","map":{"version":3,"sources":["C:/Users/Usuario/Documents/teste-frontend/test-frontend/src/Components/Starred/Starred.js"],"names":["React","Navbar","ServiceUser","Starred","state","mensagemErro","nomeUsuario","props","history","location","pathname","split","userStarred","getStarredList","username","getUserStarred","setState","length","listaStarred","star","push","full_name","description","renderStarredList","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAO,aAAP;;;IAGqBC,O;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,YAAY,EAAE,kCADR;AAENC,MAAAA,WAAW,EAAE,MAAKC,KAAL,CAAWC,OAAX,CAAmBC,QAAnB,CAA4BC,QAA5B,CAAqCC,KAArC,CAA2C,GAA3C,EAAgD,CAAhD,CAFP;AAGNC,MAAAA,WAAW,EAAE;AAHP,K;;UAMRC,c;0EAAiB,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACKZ,WAAW,CAACa,cAAZ,CAA2BD,QAA3B,CADL;;AAAA;AAAA;;AAAA,4BACVE,QADU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;WAIjB,6BAAoB;AAClB,UAAI,KAAKZ,KAAL,CAAWQ,WAAf,EAA4B;AAC1B,YAAI,KAAKR,KAAL,CAAWQ,WAAX,CAAuBK,MAAvB,KAAkC,CAAtC,EAAyC;AACvC,eAAKJ,cAAL,CAAoB,KAAKT,KAAL,CAAWE,WAA/B;AACD;;AAED,YAAIY,YAAY,GAAG,EAAnB;;AAL0B,mDAOT,KAAKd,KAAL,CAAWQ,WAPF;AAAA;;AAAA;AAO1B,8DAAyC;AAAA,gBAAhCO,IAAgC;AACvCD,YAAAA,YAAY,CAACE,IAAb,eACE;AAAK,cAAA,KAAK,EAAC,WAAX;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,aAAf;AAAA,0BAA8BD,IAAI,CAACE;AAAnC;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAK,gBAAA,KAAK,EAAC,WAAX;AAAA,0BACGF,IAAI,CAACG,WAAL,IAAoB;AADvB;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAQD;AAhByB;AAAA;AAAA;AAAA;AAAA;;AAkB1B,eAAOJ,YAAP;AACD,OAnBD,MAmBO;AACL,4BACE;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAmC,UAAA,IAAI,EAAC,OAAxC;AAAA,oBACG,KAAKd,KAAL,CAAWC;AADd;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD;AACF;;;WAED,kBAAS;AACP,0BACE;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWC,OAAX,CAAmBC;AAArC;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,oBAAiC,KAAKc,iBAAL;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAOD;;;;EAhDkCvB,KAAK,CAACwB,S;;SAAtBrB,O","sourcesContent":["import React from \"react\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport ServiceUser from \"../../Services/API\";\r\nimport \"./style.css\";\r\n\r\n\r\nexport default class Starred extends React.Component {\r\n  state = {\r\n    mensagemErro: \"Nenhum usuário para ser exibido.\",\r\n    nomeUsuario: this.props.history.location.pathname.split(\"/\")[2],\r\n    userStarred: []\r\n  };\r\n\r\n  getStarredList = async (username) => {\r\n    this.setState(await ServiceUser.getUserStarred(username));\r\n  };\r\n\r\n  renderStarredList() {\r\n    if (this.state.userStarred) {\r\n      if (this.state.userStarred.length === 0) {\r\n        this.getStarredList(this.state.nomeUsuario);\r\n      }\r\n\r\n      let listaStarred = [];\r\n\r\n      for (let star of this.state.userStarred) {\r\n        listaStarred.push(\r\n          <div class=\"card mb-3\">\r\n            <div className=\"card-header\">{star.full_name}</div>\r\n            <div class=\"card-body\">\r\n              {star.description || \"Repositório sem descrição.\"}\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      return listaStarred;\r\n    } else {\r\n      return (\r\n        <div className=\"alert alert-light\" role=\"alert\">\r\n          {this.state.mensagemErro}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar location={this.props.history.location} />\r\n\r\n        <div className=\"container mt-3\">{this.renderStarredList()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}